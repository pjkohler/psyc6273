% imagemat.m  How to use coordinate matrices to make images%% make and show coordinate matricesxlist = 1:10;ylist = 1:20;[x,y] = meshgrid(xlist,ylist); % produce the coordinates of a rectangular grid x and yplot(x,y, '.k')subplot(1,3,1); imagesc(x); axis image; title 'x'; colorbar;subplot(1,3,2); imagesc(y); axis image; title 'y'; colorbar;subplot(1,3,3); plot(x,y, 'ok'); set(gca,'xlim',[0,11],'ylim',[0,21]); title 'x and y';colormap gray;%% make and show centered coordinate matricesn = 10;midn = floor(n/2)+1;xylist = (1:n)-midn;[x,y] = meshgrid(xylist,-xylist) % subtract y-values to make y-axis be oriented upwardssubplot(1,3,1); imagesc(x); axis image; title 'x'; colorbar;subplot(1,3,2); imagesc(y); axis image; title 'y'; colorbar;subplot(1,3,3); plot(x,y, 'ok'); axis image; set(gca,'xlim',[-6,5],'ylim',[-5,6]); title 'x and y';colormap gray;%% use centered coordinate matrices to make a circlen = 64;xylist = (1:n)-(floor(n/2)+1);[x,y] = meshgrid(xylist,-xylist);r = sqrt( x.^2 + y.^2 ); % distance of each point from the originim = (r<20);             % threshold to get a circlesubplot(1,4,1); imagesc(x);  axis image; title 'x';subplot(1,4,2); imagesc(y);  axis image; title 'y';subplot(1,4,3); imagesc(r);  axis image; title 'r';subplot(1,4,4); imagesc(im); axis image; title 'circle';colormap gray;%% make a gabor% coordinatesn = 256;xylist = (1:n)-(floor(n/2)+1);[x,y] = meshgrid(xylist,-xylist);% sine wavelambda = 32; % wavelength (256/32 = 8, so 8 repeats)imsin = sin( x * 2*pi/lambda );% plot one rowfigure; plot(imsin(1,:));% gaussian bumpsigma = 40;imbump = exp(-0.5*(x.^2+y.^2)/sigma^2); % sigma is the standard deviation,                                        % amplitude kept at 1% gaborimgab = imsin.*imbump;colormap gray;subplot(1,3,1); imagesc(imsin);   axis image; title 'sine';subplot(1,3,2); imagesc(imbump);  axis image; title 'gaussian';subplot(1,3,3); imagesc(imgab);   axis image; title 'gabor';%% make a rotated gabor% coordinatesn = 256;xylist = (1:n)-(floor(n/2)+1);[x,y] = meshgrid(xylist,-xylist);% rotate coordinatestheta = 45;xrot =   cosd( theta ) * x + sind( theta ) * y; % rotation matrixyrot = - sind( theta ) * x + cosd( theta ) * y;% sine wavelambda = 32;imsin = sin( 2*pi*xrot/lambda );% gaussian bumpsigma = 40;imbump = exp(-0.5*(xrot.^2+yrot.^2)/sigma^2);% gaborimgab = imsin.*imbump;colormap gray;subplot(1,3,1); imagesc(imsin);   axis image; title 'sine';subplot(1,3,2); imagesc(imbump);  axis image; title 'gaussian';subplot(1,3,3); imagesc(imgab);   axis image; title 'gabor';%% make a movie from image matrices% make a movie objectobj = VideoWriter('noise.avi');% open the .avi fileobj.open;% write some framesfor i = 1:24        % make a frame of noise    im = uint8( 255 * rand(256) );        % add the frame to the movie    obj.writeVideo( im );    end% close fileobj.close;